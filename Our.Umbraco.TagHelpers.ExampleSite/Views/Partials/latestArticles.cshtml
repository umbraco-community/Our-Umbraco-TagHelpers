@inherits UmbracoViewPage

@using Clean.Core.Helpers
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels
@using Our.Umbraco.TagHelpers.Configuration

@{
    ArticleList articleList = UmbracoContext.Content.GetAtRoot().DescendantsOrSelf<ArticleList>().FirstOrDefault();
    int modelId = Model.Id;
    var isArticleListPage = modelId == articleList?.Id;
    var fallbackPageSize = isArticleListPage ? 10 : 3;

    var pageSize = QueryStringHelper.GetIntFromQueryString(Context.Request.Query, "size", fallbackPageSize);
    var pageNumber = QueryStringHelper.GetIntFromQueryString(Context.Request.Query, "page", 1);
    var allArticles = articleList?.Children<Article>().Where(x => x.IsVisible()).OrderByDescending(x => x.ArticleDate) ?? Enumerable.Empty<Article>();
    var pageOfArticles = allArticles.Skip((pageNumber - 1) * pageSize).Take(pageSize);
    var totalItemCount = allArticles.Count();
    var pageCount = totalItemCount > 0 ? Math.Ceiling((double)totalItemCount / pageSize) : 1;

}

<div class="container">
    <div class="row">
        <div class="col-lg-8 col-md-10 mx-auto">
            @foreach (var article in pageOfArticles)
            {
                <div class="post-preview">
                    <a href="@article.Url()">
                        <div class="post-image" our-if="article.ListingImage != null">
                            @*IMAGE DEMO 1 - 3 separate img tags with bootstrap visibility classes so only one shows at a given time.*@
                            @*
                            <img src="@article.ListingImage!.GetCropUrl(width: 600, cropAlias: "desktop")" alt="Desktop Image" class="d-none d-sm-none d-md-block" />
                            <img src="@article.ListingImage!.GetCropUrl(width: 400, cropAlias: "mobile")" alt="Mobile Small Image" class="d-none d-sm-block d-md-none"  />
                            <img src="@article.ListingImage!.GetCropUrl(width: 200, cropAlias: "mobile")" alt="Mobile X-Small Image" class="d-block d-sm-none d-md-none" />
                            *@

                            @*IMAGE DEMO 2 - Old school handwritten picture tag where each image source is manually defined*@
                            @*
                            <picture>
                                <source srcset="@article.ListingImage!.GetCropUrl(width: 600, cropAlias: "desktop")" media="(min-width: 768px)" width="600" height="300" />
                                <source srcset="@article.ListingImage!.GetCropUrl(width: 400, cropAlias: "mobile")" media="(min-width: 576px)" width="400" height="400" />
                                <img width="200" height="200" src="@article.ListingImage!.GetCropUrl(width: 200, cropAlias: "mobile")" alt="Image" />
                            </picture>
                            *@

                            @*IMAGE DEMO 3 - Media item using our-img tag helper with size variants for certain screen sizes*@
                            @**@
                            @*<our-img
                                media-item="article.ListingImage"
                                width="200"
                                width--s="400"
                                width--m="600"
                                cropalias="mobile"
                                cropalias--m="desktop" />
                            *@
                        

                            @*IMAGE DEMO 4 - Plain URL, no cropping, skewed images*@
                            
                            <our-img 
                                src="@article.ListingImage!.Url()"
                                width="200"
                                width--s="400"
                                width--m="600"
                                height="200"
                                height--s="400"
                                height--m="300"
                            />
                            

                        </div>
                        <h2 class="post-title">
                            @(!string.IsNullOrWhiteSpace(article.Title) ? article.Title : article.Name)
                        </h2>
                        @if (!string.IsNullOrWhiteSpace(article.Subtitle))
                        {
                            <h3 class="post-subtitle">@article.Subtitle</h3>
                        }
                    </a>
                    <p class="post-meta">
                        @Umbraco.GetDictionaryValue("Article.Posted")
                        @if (!string.IsNullOrWhiteSpace(article.AuthorName))
                        {
                            @Umbraco.GetDictionaryValue("Article.By")@Html.Raw("&nbsp;")@article.AuthorName
                        }
                        @Umbraco.GetDictionaryValue("Article.On") @article.ArticleDate.ToString("MMMM dd, yyyy")
                    </p>
                </div>
                <hr>
            }
            <!-- Pager -->
            <div id="paging" class="clearfix">
                @if (isArticleListPage)
                {
                    if (pageCount > 1)
                    {
                        <div class="paging-block">
                            @if (pageNumber > 1)
                            {
                                <a class="btn btn-primary float-left" href="@($"{articleList.Url()}?page={pageNumber - 1}&size={pageSize}")">@Umbraco.GetDictionaryValue("Paging.Previous")</a>
                            }
                            else
                            {
                                @Html.Raw("&nbsp;")
                            }
                        </div>
                        <div class="paging-block text-center">
                            <span>@Umbraco.GetDictionaryValue("Paging.Page") @pageNumber @Umbraco.GetDictionaryValue("Paging.Of") @pageCount</span>
                        </div>
                        <div class="paging-block">
                            @if (pageNumber < pageCount)
                            {
                                <a class="btn btn-primary float-right" href="@($"{articleList.Url()}?page={pageNumber + 1}&size={pageSize}")">@Umbraco.GetDictionaryValue("Paging.Next")</a>
                            }
                            else
                            {
                                @Html.Raw("&nbsp;")
                            }
                        </div>

                    }
                }
                else
                {
                    if (articleList != null && !string.IsNullOrWhiteSpace(articleList.Url()))
                    {
                        <a class="btn btn-primary float-end" href="@(articleList?.Url())">@Umbraco.GetDictionaryValue("ArticleList.ViewAll")</a>
                    }
                }
            </div>
        </div>
    </div>
</div>
